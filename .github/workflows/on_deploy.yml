name: ci

# https://docs.github.com/en/actions/reference/events-that-trigger-workflows
on: [deployment_status]

jobs:
    # Inspired from https://glebbahmutov.com/blog/develop-preview-test/
    cypress:
        # only runs this job on successful deploy
        if: github.event.deployment_status.state == 'success'
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

            # https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#job-status-check-functions
            - name: Cypress tests running
              if: ${{ success() }}
              # set the merge commit status check
              # using GitHub REST API
              # see https://docs.github.com/en/rest/reference/repos#create-a-commit-status
              run: |
                  curl --request POST \
                  --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
                  --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
                  --header 'content-type: application/json' \
                  --data '{
                  "context": "cypress",
                  "state": "pending",
                  "description": "Cypress tests running",
                  "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

            - name: Run Cypress
              uses: cypress-io/github-action@v2
              env:
                  CYPRESS_BASE_URL: ${{ github.event.deployment_status.target_url }}

            # after the test run completes
            # store videos and any screenshots
            # NOTE: screenshots will be generated only if E2E test failed
            # thus we store screenshots only on failures
            # Alternative: create and commit an empty cypress/screenshots folder
            # to always have something to upload
            - uses: actions/upload-artifact@v1
              if: failure()
              with:
                  name: cypress-screenshots
                  path: cypress/screenshots
            # Test run video was always captured, so this action uses "always()" condition
            - uses: actions/upload-artifact@v1
              if: always()
              with:
                  name: cypress-videos
                  path: cypress/videos

            - name: Cypress tests passed
              if: ${{ success() }}
              run: |
                  curl --request POST \
                  --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
                  --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
                  --header 'content-type: application/json' \
                  --data '{
                  "context": "cypress",
                  "state": "success",
                  "description": "Cypress tests passed",
                  "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  }'

            - name: Cypress tests fail
              if: ${{ failure() }}
              run: |
                  curl --request POST \
                  --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
                  --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
                  --header 'content-type: application/json' \
                  --data '{
                  "context": "cypress",
                  "state": "failure",
                  "description": "Cypress tests failed",
                  "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  }'
